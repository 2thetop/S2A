[ProjectNameSection]
Project = Hello Arduino

[SerialPortSection]
# arduino port
ComPort = /dev/ttyACM0
# baudrate must match the value of the arduino sketch
BaudRate = 115200
TimeOut = 1

# this value must match that in the .s2e script
[HTTPServerSection]
PORT = 50209

# specify the initial pin direction for each pin used by the application
# format is PIN = DIRECTION
[ArduinoPinDirection]
# LED
13 = output

# for each arduino pin used as an output, specify
# the output type and its value
# format is PIN = TYPE, VALUE
[ArduinoInitialOutputPinValues]
13 = digital,0



# These values must be the same used in the Scratch .s2e file
# format is PIN = Scratch_ID
[ReporterMapSection]
13 = pin_13_led


# report pin type specifier
# format is PIN = TYPE
[ReporterPinToTypeMap]


# this section contains Scratch commands as the key
# these values must be the same as the ones specified in the Scratch .s2e file
# format is COMMAND = PIN, #_OF_PARAMETERS FOR THE COMMAND, TYPE
# a type value of None indicates that this is a "special" command and is not
# a simple pin manipulation

[CommandPinMapSection]
pin_13_led = 13,1,digital


# These are the set of JSON commands sent to Arduino
# The values in CAPS will be replaced with the actual values at run time
[JsonStringTemplateSection]
writeValueToPin = {"write":{"pin":PIN,"type":"TYPE","value":VALUE}}
setPinDirection = {"mode":{"pin":PIN,"mode":"MODE"}}
readPinValue = {"read":{"pin":PIN,"type":"TYPE"}}
readEncoder = {"read":{"encoder":100,"type":"analog"}}
writeServo = {"write":{"type":"servo","value":VALUE, "pin":5}}
writePiezo = {"write":{"type":"piezo","freq":FREQ,"time":TIME}}

# any special processing needed
# for CodeSheild, the Tone and Servo commands do not restore
# interrupts appropriately, so special LED processing is needed
[SpecialProcessing]
enable_special_LED_processing = False
